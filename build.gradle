buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.6'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.gondo'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // mail sender
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'commons-io:commons-io:2.6'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor(
            'com.querydsl:querydsl-apt:5.0.0:jakarta',
            "jakarta.annotation:jakarta.annotation-api",
            "jakarta.persistence:jakarta.persistence-api"
    )

    // jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'org.springframework.security:spring-security-crypto'
    testImplementation 'org.springframework.security:spring-security-test'


}


def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDir querydslDir
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

// clean 태스크가 querydsl 디렉토리를 삭제하도록 설정
tasks.named('clean') {
    doLast {
        file(querydslDir).deleteDir()
    }
}

//def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
//println("querydslDir:$querydslDir")
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//
//sourceSets {
//    main.java.srcDir querydslDir
//}
//
//configurations {
//    querydsl.extendsFrom compileClasspath
//}
//
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}
//
//tasks.named('compileQuerydsl') {
//}
//
//tasks.withType(JavaCompile) {
//    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
//}
//
//tasks.named('clean') {
//    doLast {
//        file(querydslDir).deleteDir()
//    }
//}